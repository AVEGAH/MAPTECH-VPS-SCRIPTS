#!/bin/bash

# Function to display the installation menu
display_menu() {
    echo -e "\033[1;33m"
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    echo "  INTERNET-DOCTORS VPS SCRIPTS, please select an option:"
    echo "  ┌────────────────────────────────────────────────────────────────────┐"
    echo "  │ 1. SSH installation                                                 │"
    echo "  │ 2. UDP-request installation                                         │"
    echo "  │ 3. UDP-custom installation                                          │"
    echo "  └────────────────────────────────────────────────────────────────────┘"
   echo "                     ----------Created By----------                     "
   echo "            ┌───────────────────────────────────────────────┐           "
   echo "            │                  MAPTECH-GH                    │          "
   echo "            │                @maptechghbot                   │          "
   echo "            └───────────────────────────────────────────────┘           "
    printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
    echo -e "\033[0m"
}


# Function to display a progress bar
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"

    (
    [[ -e $HOME/fim ]] && rm $HOME/fim
    ${comando[0]} -y > /dev/null 2>&1
    ${comando[1]} -y > /dev/null 2>&1
    touch $HOME/fim
    ) > /dev/null 2>&1 &

    tput civis
    echo -ne "  \033[1;33m◇ PLEASE WAIT... \033[1;37m- \033[1;33m["
    while true; do
        for ((i=0; i<18; i++)); do
            echo -ne "\033[1;31m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "  \033[1;33m◇ PLEASE WAIT... \033[1;37m- \033[1;33m["
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m◇ DONE!\033[1;37m"
    tput cnorm
}

# Prompt for user selection
display_menu
read -p "Enter the number corresponding to your choice: " choice

case "$choice" in
  1) 
    # Continue installation
    lear

# Define ip_address as a global variable
ip_address=$(hostname -I | awk '{print $1}')


# Function to send verification code to multiple Telegram handles using different APIs
send_code_telegram() {
     local telegram_handle=$1
    local current_time=$(date +%s)
    local storage_file="/root/vcheck/.storage.txt"  # Hidden file with a dot prefix

    # Check if the vcheck folder exists, if not create it
    if [[ ! -d "/root/vcheck" ]]; then
        mkdir -p /root/vcheck
    fi

    # Check if the storage file exists, if not create it
    if [[ ! -f "$storage_file" ]]; then
        touch "$storage_file"
        chmod 600 "$storage_file"  # Restrict permissions for security
    fi

    # Check if there's a recent request from the same IP address
    local last_sent_code=$(awk -v ip="$ip_address" '$1 == ip {print $2}' "$storage_file")
    local last_sent_time=$(awk -v ip="$ip_address" '$1 == ip {print $3}' "$storage_file")

    # Adjust the time interval here (e.g., 600 for 10 minutes)
    if [[ -n "$last_sent_code" && $((current_time - last_sent_time)) -lt 3600 ]]; then
        # Calculate remaining time in seconds
        local time_left=$((3600 - (current_time - last_sent_time)))

        # Convert remaining time to minutes and seconds
        local minutes=$((time_left / 60))
        local seconds=$((time_left % 60))

        # Display the message with the remaining time
        echo -e "\033[1;36m======================================================================================\033[0m"
        echo -e "\033[1;31m  CODE SENT ALREADY! YOU HAVE $minutes MINUTES AND $seconds SECONDS LEFT TO REDEEM IT \033[0m"
        echo -e "\033[1;36m======================================================================================\033[0m"
        echo ""
        echo -e "\033[1;32m              @internet_doctor1  \033[0m on Telegram"
        echo "" 
        echo -e "\033[1;36m======================================================================================\033[0m"
        echo ""
        return
    fi

    # Generate random 6-digit code
    local random_code=$(shuf -i 100000-999999 -n 1)

    # Store the code along with the IP address and timestamp
    echo "$ip_address $random_code $current_time" > "$storage_file"

    # Send message to Telegram
    local message="INTERNET-DOCTORS = The verification code for $ip_address is: $random_code"
    for ((i=0; i<${#bot_tokens[@]}; i++)); do
        local bot_token="${bot_tokens[i]}"
        local chat_id="${chat_ids[i]}"
        curl -s -X POST "https://api.telegram.org/bot$bot_token/sendMessage" -d "chat_id=$chat_id" -d "text=$message" > /dev/null
    done
    echo -e "\033[1;36m=============================================================\033[0m"
    echo -e "\033[1;31m       CONTACT INTERNET-DOCTOR FOR VERIFICATION CODE\033[0m"
    echo -e "\033[1;36m==============================================================\033[0m"
    echo ""
    echo -e "\033[1;32m              @internet_doctor1  \033[0m on Telegram"
    echo "" 
    echo -e "\033[1;36m=============================================================\033[0m"
    echo ""
}
bot_tokens=("7129070362:AAGYJspbL60IzkzNXz8mF_oxhBtxwvv-S6w" "6764195726:AAFwdMgpNFi9MZVfEWXQaTaPf-xfZ9s7ZIE")
chat_ids=("1638963598" "5989863155")

clear

# Check for root privilege
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33m◇ YOU NEED TO RUN AS ROOT!\033[0m"
    exit 0
}

# Generate and send the verification code
send_code_telegram

# Prompt the user to enter the verification code
echo -n -e "\033[1;33m  ENTER VERIFICATION CODE: \033[0m"
read user_code
last_sent=$(awk -v ip="$ip_address" '$1 == ip {print $2}' "/root/vcheck/.storage.txt")

# Compare the entered code with the generated code
if [[ -z "$user_code" || "$user_code" != "$last_sent" ]]; then
    echo ""
    echo -e "\033[1;35mInvalid code. Installation aborted.\033[0m"
    echo ""
    exit 1
else
    rm -rf /root/vcheck
fi
clear
# Variable Initialization
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r'| sed -e 's/[^a-z.]//ig'| rev)
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×'|sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×'|sed -e 's/[^a-z/]//ig')

}
    ;;
  2) 
    # Abort installation and install UDP request
    clear
    echo -e "\033[1;36m◇ Abort installation and install UDP request\033[0m"
    wget https://raw.githubusercontent.com/MAPTECHGH/SocksIP-udpServer/main/UDPserver.sh && 
    chmod +x UDPserver.sh && 
    ./UDPserver.sh
    ;;
  3) 
    # Install UDP custom
    clear
    echo -e "\033[1;36m◇ Install UDP custom\033[0m"
    wget https://raw.githubusercontent.com/MAPTECHGH/Udpcustom/main/install.sh && 
    chmod +x install.sh && 
    ./install.sh
    ;;
  *) 
    echo -e "\033[1;31mInvalid choice. Please enter either '1', '2', or '3'.\033[0m"
    ;;
esac
